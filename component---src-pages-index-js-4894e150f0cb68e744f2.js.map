{"version":3,"sources":["webpack:///./src/components/Map/styled.js","webpack:///./src/components/CountryPolygon/styled.js","webpack:///./src/components/CountryPolygon/index.js","webpack:///./src/components/Swiper/index.js","webpack:///./src/components/LeftPanel/styled.js","webpack:///./src/components/Field/styled.js","webpack:///./src/components/Field/index.js","webpack:///./src/components/LeftPanel/Content.js","webpack:///./src/components/LeftPanel/index.js","webpack:///./src/utils/number.js","webpack:///./src/components/Map/index.js","webpack:///./src/pages/index.js"],"names":["LeafletMap","styled","_ref","onMapRef","props","objectWithoutPropertiesLoose_default","react_default","a","createElement","es_Map","Object","assign","ref","withConfig","componentId","CountryTooltip","Tooltip","isHovered","Flag","img","CountryPolygon","_Component","apply","this","arguments","inheritsLoose_default","_proto","prototype","shouldComponentUpdate","nextState","nextIsSelected","isSelected","nextiIsHovered","_this$props","render","_this$props2","name","coordinates","flag","onCountry","onMouseOutPolygon","Polygon","positions","color","green","weight","onMouseOver","onMouseOut","onClick","sticky","src","Component","Swiper","_this","_len","length","args","Array","_key","call","concat","swipeableNode","ratioDistance","deltaX","deltaY","xRatio","yRatio","_getElementWidthAndHe","getElementWidthAndHeight","width","height","Math","abs","swiped","event","isFlick","velocity","onSwiped","direction","onSwiperRef","onRef","swiping","_ref2","onSwiping","x","y","isLeft","isRight","isUp","isDown","children","es","innerRef","propTypes","PropTypes","func","LeftPanelContainer","Swiper_Swiper","attrs","style","left","transition","CloseBtn","IconButton","FieldContainer","div","Name","Value","Field","React","memo","value","Content","nextcode","code","Boolean","onClosePanel","Fragment","styled_Flag","Close","LeftPanel","state","L","DomEvent","disableClickPropagation","n","min","max","setState","_ref3","_ref4","nextDeltaX","componentDidUpdate","_ref5","prevState","prevcode","countyIsChanged","_this$state","Content_Content","Map","lat","lng","zoom","countries","selectedCountry","hoveredCountry","e","country","originalEvent","type","onMap","target","map","container","throttle","_this2","position","window","worldCopyJump","center","minZoom","maxZoom","zoomControl","TileLayer","url","countryPolygons","geoJSON","CountryPolygon_CountryPolygon","key","LeftPanel_LeftPanel","Index","Map_Map","component","bool"],"mappings":"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","file":"component---src-pages-index-js-4894e150f0cb68e744f2.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Map } from \"react-leaflet\";\n\nexport const LeafletMap = styled(({ onMapRef, ...props }) => <Map ref={onMapRef} {...props} />)`\n  width: 100%;\n  height: 100%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Tooltip } from \"react-leaflet\";\n\nexport const CountryTooltip = styled(props => <Tooltip {...props} />)`\n  display: flex;\n  border: none;\n  align-items: center;\n  font-weight: 600;\n  height: 34px;\n  visibility: ${({ isHovered }) => (isHovered ? \"visibility\" : \"hidden\")};\n  &.leaflet-tooltip-left {\n    margin-left: -14px;\n  }\n  &.leaflet-tooltip-right {\n    margin-left: 14px;\n  }\n`;\n\nexport const Flag = styled.img`\n  max-width: none;\n  width: auto;\n  height: 26px;\n  margin-right: 6px;\n  box-shadow: 0 0 6px 0 rgba(10, 18, 33, 0.2);\n`;\n","import React, { Component } from \"react\";\n\nimport { Polygon } from \"react-leaflet\";\nimport { CountryTooltip, Flag } from \"./styled\";\nimport color from \"../../styles/colors\";\n\nexport class CountryPolygon extends Component {\n  shouldComponentUpdate({ isSelected: nextIsSelected, isHovered: nextiIsHovered }, nextState) {\n    const { isSelected, isHovered } = this.props;\n\n    return isSelected !== nextIsSelected || isHovered !== nextiIsHovered;\n  }\n\n  render() {\n    const {\n      name,\n      coordinates,\n      isSelected,\n      flag,\n      isHovered,\n      onCountry,\n      onMouseOutPolygon,\n    } = this.props;\n\n    return (\n      <Polygon\n        positions={coordinates}\n        color={isSelected ? color.green : isHovered ? \"rgba(0,170,255,0.8)\" : \"transparent\"}\n        weight={1}\n        onMouseOver={onCountry}\n        onMouseOut={onMouseOutPolygon}\n        onClick={onCountry}\n      >\n        <CountryTooltip isHovered={isHovered} sticky>\n          <Flag src={flag} />\n          {name}\n        </CountryTooltip>\n      </Polygon>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// https://github.com/dogfessional/react-swipeable\nimport { Swipeable } from \"react-swipeable\";\n\nimport { getElementWidthAndHeight } from \"../../utils/dom\";\n\nexport class Swiper extends Component {\n  static propTypes = {\n    onSwiped: PropTypes.func,\n    onRef: PropTypes.func,\n  };\n\n  swipeableNode = null;\n\n  direction(deltaX, deltaY) {\n    const x = deltaX > 0;\n    const y = deltaY > 0;\n    return {\n      isLeft: x,\n      isRight: !x,\n      isUp: y,\n      isDown: !y,\n    };\n  }\n\n  // ratio of percentage\n  ratioDistance = (deltaX, deltaY) => {\n    if (!this.swipeableNode) {\n      return {\n        xRatio: null,\n        yRatio: null,\n      };\n    }\n\n    const { width, height } = getElementWidthAndHeight(this.swipeableNode);\n\n    const xRatio = (Math.abs(deltaX) * 100) / width;\n    const yRatio = (Math.abs(deltaY) * 100) / height;\n\n    return {\n      xRatio,\n      yRatio,\n    };\n  };\n\n  swiped = ({ event, deltaX, deltaY, isFlick, velocity }) => {\n    const { onSwiped } = this.props;\n\n    this.ratioDistance(deltaX, deltaY);\n    onSwiped &&\n      onSwiped({\n        event,\n        deltaX,\n        deltaY,\n        isFlick,\n        velocity,\n        ...this.direction(deltaX, deltaY),\n        ...this.ratioDistance(deltaX, deltaY),\n      });\n  };\n\n  onSwiperRef = ref => {\n    const { onRef } = this.props;\n\n    if (ref) {\n      this.swipeableNode = ref;\n      onRef && onRef(ref);\n    }\n  };\n\n  swiping = ({ event, deltaX, deltaY, isFlick, velocity }) => {\n    const { onSwiping } = this.props;\n\n    this.ratioDistance(deltaX, deltaY);\n    onSwiping &&\n      onSwiping({\n        event,\n        deltaX,\n        deltaY,\n        isFlick,\n        velocity,\n        ...this.direction(deltaX, deltaY),\n        ...this.ratioDistance(deltaX, deltaY),\n      });\n  };\n\n  render() {\n    const { children, ...props } = this.props;\n\n    return (\n      <Swipeable\n        {...props}\n        innerRef={this.onSwiperRef}\n        onSwiped={this.swiped}\n        onSwiping={this.swiping}\n      >\n        {children}\n      </Swipeable>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { IconButton } from \"../../components/Buttons/IconButton\";\nimport { Swiper } from \"../../components/Swiper\";\n\nexport const LeftPanelContainer = styled(props => <Swiper {...props} />).attrs(\n  ({ deltaX, transition }) => ({\n    style: {\n      left: `-${deltaX}px`,\n      transition: transition ? \"left 400ms ease\" : \"none\",\n    },\n  }),\n)`\n  width: 400px;\n  padding: 80px 15px 15px 15px;\n  box-shadow: 0 0 12px 0 rgba(10, 18, 33, 0.1);\n  cursor: default;\n  z-index: 999;\n  position: absolute;\n  top: 0;\n  height: 100%;\n  background-color: #fff;\n  overflow: hidden;\n`;\n\nexport const Flag = styled.img`\n  position: absolute;\n  left: 15px;\n  top: 15px;\n  width: 60px;\n  height: auto;\n  box-shadow: 0 6px 6px 0 rgba(10, 18, 33, 0.2);\n`;\n\nexport const CloseBtn = styled(IconButton)`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n`;\n","import styled from \"styled-components\";\n\nexport const FieldContainer = styled.div`\n  display: flex;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.div`\n  width: 40%;\n  font-weight: 600;\n`;\n\nexport const Value = styled.div`\n  width: 60%;\n`;\n","import React from \"react\";\n\nimport { FieldContainer, Name, Value } from \"./styled\";\n\nexport const Field = React.memo(({ name, value }) => (\n  <FieldContainer>\n    <Name>{name}</Name>\n    <Value>{value}</Value>\n  </FieldContainer>\n));\n","import React, { Component } from \"react\";\n\nimport { Close } from \"../../components/Icons/Close\";\nimport { CloseBtn, Flag } from \"./styled\";\nimport { Field } from \"../Field\";\n\nexport class Content extends Component {\n  shouldComponentUpdate({ code: nextcode }, nextState) {\n    const { code } = this.props;\n\n    return Boolean(code !== nextcode && nextcode);\n  }\n\n  render() {\n    const { onClosePanel, name, flag } = this.props;\n\n    return (\n      <>\n        <Flag src={flag} />\n        <CloseBtn onClick={onClosePanel}>\n          <Close />\n        </CloseBtn>\n        <h1>{name}</h1>\n        <Field name=\"name 1\" value=\"value 1\" />\n        <Field name=\"name 2\" value=\"value 2\" />\n        <Field name=\"name 3\" value=\"value 3\" />\n        <Field name=\"name 4\" value=\"value 4\" />\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport L from \"leaflet\";\n\nimport { rateLimit } from \"../../utils/number\";\nimport { Content } from \"./Content\";\nimport { LeftPanelContainer } from \"./styled\";\n\nexport class LeftPanel extends Component {\n  state = {\n    deltaX: 400,\n    transition: false,\n  };\n\n  shouldComponentUpdate({ code: nextcode }, { deltaX: nextDeltaX }) {\n    const { deltaX } = this.state;\n    const { code } = this.props;\n\n    return deltaX !== nextDeltaX || code !== nextcode;\n  }\n\n  onRef = ref => ref && L.DomEvent.disableClickPropagation(ref);\n\n  onSwiping = ({ deltaX }) => {\n    this.setState({ deltaX: rateLimit(deltaX, 0, 400), transition: false });\n  };\n\n  onSwiped = ({ deltaX }) => {\n    const { onClosePanel } = this.props;\n\n    if (deltaX >= 200) {\n      this.setState(\n        {\n          deltaX: 400,\n          transition: true,\n        },\n        () => {\n          onClosePanel();\n        },\n      );\n    } else {\n      this.setState({ deltaX: 0, transition: true });\n    }\n  };\n\n  componentDidUpdate({ code: prevcode }, prevState) {\n    const { code } = this.props;\n\n    const countyIsChanged = prevcode !== code;\n\n    if (countyIsChanged && code) {\n      this.setState({ deltaX: 0, transition: true });\n    } else if (countyIsChanged && !code) {\n      this.setState({ deltaX: 400, transition: true });\n    }\n  }\n\n  onClosePanel = () => {\n    const { onClosePanel } = this.props;\n\n    this.setState(\n      {\n        deltaX: 400,\n        transition: true,\n      },\n      () => {\n        onClosePanel();\n      },\n    );\n  };\n\n  render() {\n    const { deltaX, transition } = this.state;\n\n    return (\n      <LeftPanelContainer\n        transition={transition}\n        deltaX={deltaX}\n        onSwiped={this.onSwiped}\n        onSwiping={this.onSwiping}\n        onRef={this.onRef}\n      >\n        <Content onClosePanel={this.onClosePanel} {...this.props} />\n      </LeftPanelContainer>\n    );\n  }\n}\n","export function rateLimit(n, min, max) {\n  if (n < min) {\n    return min;\n  } else if (n > max) {\n    return max;\n  } else {\n    return n;\n  }\n}\n","import React, { Component } from \"react\";\nimport throttle from \"lodash/throttle\";\n// https://leafletjs.com/reference-1.4.0.html\n// https://react-leaflet.js.org/docs/en/context.html\nimport { TileLayer } from \"react-leaflet\";\n\nimport { LeafletMap } from \"./styled\";\nimport { CountryPolygon } from \"../../components/CountryPolygon\";\nimport { LeftPanel } from \"../../components/LeftPanel\";\nimport countryPolygons from \"../../assets/data/countries\";\n\nexport class Map extends Component {\n  constructor(props) {\n    super(props);\n    this.onCountry = throttle(this.onCountry, 50);\n  }\n\n  state = {\n    lat: 51.505,\n    lng: 14,\n    zoom: 4,\n    countries: [],\n    selectedCountry: null,\n    hoveredCountry: null,\n  };\n\n  onCountry = (e, country) => {\n    const { selectedCountry } = this.state;\n    const { code } = country;\n\n    if (e.originalEvent.type === \"mouseover\") {\n      this.setState({ hoveredCountry: country });\n    } else if (e.originalEvent.type === \"mouseout\") {\n      this.setState({ hoveredCountry: null });\n    } else if (e.originalEvent.type === \"click\") {\n      if (selectedCountry === null || (selectedCountry && selectedCountry.code !== code)) {\n        this.setState({ selectedCountry: country });\n      }\n    }\n  };\n\n  onMap = e => {\n    const clickOnMap = e.originalEvent.target === this.map.container;\n\n    if (clickOnMap) {\n      this.setState({ selectedCountry: null, hoveredCountry: null });\n    }\n  };\n\n  onMapRef = ref => {\n    if (ref) {\n      this.map = ref;\n    }\n  };\n\n  onClosePanel = () => this.setState({ selectedCountry: null, hoveredCountry: null });\n\n  onMouseOutPolygon = () => this.setState({ hoveredCountry: null });\n\n  render() {\n    const { lat, lng, zoom, selectedCountry, hoveredCountry } = this.state;\n    const position = [lat, lng];\n\n    if (typeof window !== \"undefined\") {\n      return (\n        <LeafletMap\n          onMapRef={this.onMapRef}\n          onClick={this.onMap}\n          worldCopyJump={true}\n          center={position}\n          zoom={zoom}\n          minZoom={4}\n          maxZoom={44}\n          zoomControl={false}\n        >\n          <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n          {countryPolygons.map(country => {\n            const {\n              name,\n              code,\n              flag,\n              geoJSON: { coordinates },\n            } = country;\n\n            const isSelected = Boolean(selectedCountry && selectedCountry.code === code);\n            const isHovered = Boolean(hoveredCountry && hoveredCountry.code === code);\n\n            return (\n              <CountryPolygon\n                key={code}\n                flag={flag}\n                name={name}\n                isSelected={isSelected}\n                isHovered={isHovered}\n                coordinates={coordinates}\n                onCountry={e => this.onCountry(e, country)}\n                onMouseOutPolygon={this.onMouseOutPolygon}\n              />\n            );\n          })}\n          <LeftPanel onClosePanel={this.onClosePanel} {...selectedCountry} />\n        </LeafletMap>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Map } from \"../components/Map\";\n\nconst Index = () => {\n  return <Map />;\n};\n\nIndex.propTypes = {\n  component: PropTypes.bool,\n};\n\nexport default Index;\n"],"sourceRoot":""}